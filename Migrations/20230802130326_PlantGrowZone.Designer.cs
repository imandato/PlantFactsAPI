// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantApi.Data;

#nullable disable

namespace PlantApi.Migrations
{
    [DbContext(typeof(PlantContext))]
    [Migration("20230802130326_PlantGrowZone")]
    partial class PlantGrowZone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlantApi.Models.GrowZone", b =>
                {
                    b.Property<long>("GrowZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GrowZoneId"));

                    b.Property<string>("GrowZoneDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrowZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GrowZoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("GrowZoneId");

                    b.ToTable("GrowZones");
                });

            modelBuilder.Entity("PlantApi.Models.PlantFact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Light")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Water")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlantFacts");
                });

            modelBuilder.Entity("PlantApi.Models.PlantGrowZone", b =>
                {
                    b.Property<long>("PlantFactId")
                        .HasColumnType("bigint");

                    b.Property<long>("GrowZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("PlantFactId", "GrowZoneId");

                    b.HasIndex("GrowZoneId");

                    b.ToTable("PlantGrowZones");
                });

            modelBuilder.Entity("PlantApi.Models.PlantGrowZone", b =>
                {
                    b.HasOne("PlantApi.Models.GrowZone", "GrowZone")
                        .WithMany("PlantGrowZones")
                        .HasForeignKey("GrowZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantApi.Models.PlantFact", "PlantFact")
                        .WithMany("PlantGrowZones")
                        .HasForeignKey("PlantFactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrowZone");

                    b.Navigation("PlantFact");
                });

            modelBuilder.Entity("PlantApi.Models.GrowZone", b =>
                {
                    b.Navigation("PlantGrowZones");
                });

            modelBuilder.Entity("PlantApi.Models.PlantFact", b =>
                {
                    b.Navigation("PlantGrowZones");
                });
#pragma warning restore 612, 618
        }
    }
}
